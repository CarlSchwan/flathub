From cdda79378ea5f64aaa074977375c168dfec9f029 Mon Sep 17 00:00:00 2001
From: Carl Schwan <carl@carlschwan.eu>
Date: Thu, 7 Nov 2024 12:36:31 +0000
Subject: [PATCH] Add basic launcher when building flatpak

This is required for Flathub


(cherry picked from commit db69b4c6d929a94200062001f3f0e055942768c9)

b18ad120 Add basic launcher when building flatpak
fbff2468 Apply 1 suggestion(s) to 1 file(s)
b9760410 Fix reuse

Co-authored-by: Carl Schwan <carl@carlschwan.eu>
---
 src/CMakeLists.txt                   |  3 +
 src/launcher/CMakeLists.txt          | 33 ++++++++++
 src/launcher/Main.qml                | 92 ++++++++++++++++++++++++++++
 src/launcher/Messages.sh             |  4 ++
 src/launcher/helper.cpp              | 33 ++++++++++
 src/launcher/helper.h                | 18 ++++++
 src/launcher/main.cpp                | 80 ++++++++++++++++++++++++
 src/launcher/org.kde.merkuro.desktop | 10 +++
 8 files changed, 273 insertions(+)
 create mode 100644 src/launcher/CMakeLists.txt
 create mode 100644 src/launcher/Main.qml
 create mode 100644 src/launcher/Messages.sh
 create mode 100644 src/launcher/helper.cpp
 create mode 100644 src/launcher/helper.h
 create mode 100644 src/launcher/main.cpp
 create mode 100644 src/launcher/org.kde.merkuro.desktop

diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index c63137480..0351d5bf0 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -7,5 +7,8 @@ add_subdirectory(contacts)
 add_subdirectory(mail)
 add_subdirectory(calendar)
 add_subdirectory(components)
+if (MERKURO_FLATPAK)
+    add_subdirectory(launcher)
+endif()
 
 install(FILES org.kde.merkuro.metainfo.xml DESTINATION ${KDE_INSTALL_METAINFODIR})
diff --git a/src/launcher/CMakeLists.txt b/src/launcher/CMakeLists.txt
new file mode 100644
index 000000000..20acd163f
--- /dev/null
+++ b/src/launcher/CMakeLists.txt
@@ -0,0 +1,33 @@
+# SPDX-FileCopyrightText: 2024 Carl Schwan <carl@carlschwan.eu>
+# SPDX-License-Identifier: BSD-2-Clause
+
+add_executable(merkurolauncher main.cpp helper.cpp helper.h)
+
+qt_add_qml_module(merkurolauncher
+    URI org.kde.merkuro
+    QML_FILES
+        Main.qml
+    DEPENDENCIES
+        QtQuick
+        org.kde.kirigamiaddons.formcard
+)
+
+target_link_libraries(merkurolauncher PUBLIC
+    Qt::Quick
+    Qt::QuickControls2
+    Qt::Widgets
+    Qt::Svg
+    KF6::I18n
+    KF6::CoreAddons
+    KF6::Crash
+    KF6::KIOWidgets
+)
+
+if(TARGET KF6::I18nQml)
+target_link_libraries(merkurolauncher PRIVATE
+        KF6::I18nQml
+)
+endif()
+
+install(TARGETS merkurolauncher ${KDE_INSTALL_TARGETS_DEFAULT_ARGS})
+install(PROGRAMS org.kde.merkuro.desktop DESTINATION ${KDE_INSTALL_APPDIR})
diff --git a/src/launcher/Main.qml b/src/launcher/Main.qml
new file mode 100644
index 000000000..78b6b2d58
--- /dev/null
+++ b/src/launcher/Main.qml
@@ -0,0 +1,92 @@
+// SPDX-FileCopyrightText: 2024 Carl Schwan <carl@carlschwan.eu>
+// SPDX-License-Identifier: LGPL-2.1-or-later
+
+import QtQuick
+import QtQuick.Layouts
+import QtQuick.Controls as Controls
+import org.kde.kirigami as Kirigami
+import org.kde.kirigamiaddons.delegates as Delegates
+import org.kde.kirigamiaddons.components as Components
+
+Controls.ApplicationWindow {
+    id: root
+
+    visible: true
+    width: contentRow.implicitWidth + Kirigami.Units.largeSpacing * 4
+    height: contentRow.implicitHeight + Kirigami.Units.largeSpacing * 4
+
+    background: Controls.Control {
+        background: Components.DialogRoundedBackground {}
+        leftInset: Kirigami.Units.largeSpacing
+        topInset: Kirigami.Units.largeSpacing
+        rightInset: Kirigami.Units.largeSpacing
+        bottomInset: Kirigami.Units.largeSpacing
+    }
+
+    flags: Qt.Window | Qt.FramelessWindowHint | Qt.WA_TranslucentBackground | Qt.NoDropShadowWindowHint
+    color: "transparent"
+
+    Shortcut {
+        sequence: StandardKey.Cancel
+        onActivated: Qt.quit()
+    }
+
+    Helper {
+        id: helper
+    }
+
+    RowLayout {
+        id: contentRow
+
+        x: Kirigami.Units.largeSpacing * 2
+        y: Kirigami.Units.largeSpacing * 2
+
+        spacing: Kirigami.Units.smallSpacing
+        Repeater {
+            model: [
+                {
+                    name: i18n("Calendar"),
+                    icon: "org.kde.merkuro.calendar",
+                    desktopId: "merkuro-calendar"
+                },
+                {
+                    name: i18n("Contacts"),
+                    icon: "org.kde.merkuro.contact",
+                    desktopId: "merkuro-contac"
+                },
+                {
+                    name: i18n("Quit"),
+                    icon: "application-exit-symbolic",
+                    desktopId: ""
+                }
+            ]
+
+            Delegates.RoundedItemDelegate {
+                leftPadding: Kirigami.Units.largeSpacing
+                topPadding: Kirigami.Units.largeSpacing
+                rightPadding: Kirigami.Units.largeSpacing
+                bottomPadding: Kirigami.Units.largeSpacing
+
+                onClicked: helper.execute(modelData.desktopId)
+
+                Kirigami.Theme.colorSet: Kirigami.Theme.View
+                Kirigami.Theme.inherit: false
+
+                contentItem: ColumnLayout {
+                    Kirigami.Icon {
+                        source: modelData.icon
+                        Layout.preferredWidth: Kirigami.Units.iconSizes.huge * 2
+                        Layout.preferredHeight: Kirigami.Units.iconSizes.huge * 2
+                    }
+
+                    Kirigami.Heading {
+                        level: 2
+                        text: modelData.name
+                        Layout.fillWidth: true
+                        horizontalAlignment: Qt.AlignHCenter
+                    }
+                }
+            }
+        }
+    }
+}
diff --git a/src/launcher/Messages.sh b/src/launcher/Messages.sh
new file mode 100644
index 000000000..c0bc5c408
--- /dev/null
+++ b/src/launcher/Messages.sh
@@ -0,0 +1,4 @@
+#! /usr/bin/env bash
+# SPDX-FileCopyrightText: 2020 Tobias Fella <fella@posteo.de>
+# SPDX-License-Identifier: CC0-1.0
+$XGETTEXT `find -name \*.cpp -o -name \*.qml` -o $podir/merkurolauncher.pot
diff --git a/src/launcher/helper.cpp b/src/launcher/helper.cpp
new file mode 100644
index 000000000..9d48bbdf6
--- /dev/null
+++ b/src/launcher/helper.cpp
@@ -0,0 +1,33 @@
+// SPDX-FileCopyrightText: 2024 Carl Schwan <carl@carlschwan.eu>
+// SPDX-License-Identifier: LGPL-2.1-or-later
+
+#include "helper.h"
+
+#include <KIO/CommandLauncherJob>
+#include <KIO/JobUiDelegateFactory>
+#include <KJobUiDelegate>
+#include <KService>
+#include <QApplication>
+
+using namespace Qt::StringLiterals;
+
+Helper::Helper(QObject *parent)
+    : QObject(parent)
+{
+}
+
+void Helper::execute(const QString &appId)
+{
+    if (appId.isEmpty()) {
+        qApp->quit();
+    }
+
+    auto job = new KIO::CommandLauncherJob(appId, QStringList{});
+    connect(job, &KJob::result, this, [job](KJob *) {
+        if (job->error() != KJob::NoError) {
+            qWarning() << job->errorString();
+        }
+        qApp->quit();
+    });
+    job->start();
+}
diff --git a/src/launcher/helper.h b/src/launcher/helper.h
new file mode 100644
index 000000000..36229e47d
--- /dev/null
+++ b/src/launcher/helper.h
@@ -0,0 +1,18 @@
+// SPDX-FileCopyrightText: 2024 Carl Schwan <carl@carlschwan.eu>
+// SPDX-License-Identifier: LGPL-2.1-or-later
+
+#pragma once
+
+#include <QObject>
+#include <qqmlregistration.h>
+
+class Helper : public QObject
+{
+    Q_OBJECT
+    QML_ELEMENT
+
+public:
+    explicit Helper(QObject *parent = nullptr);
+
+    Q_INVOKABLE void execute(const QString &appId);
+};
diff --git a/src/launcher/main.cpp b/src/launcher/main.cpp
new file mode 100644
index 000000000..7a8a27d3a
--- /dev/null
+++ b/src/launcher/main.cpp
@@ -0,0 +1,80 @@
+// SPDX-License-Identifier: GPL-2.0-or-later
+// SPDX-FileCopyrightText: 2024 Carl Schwan <carl@carlschwan.eu>
+
+#include <QApplication>
+#include <QtGlobal>
+
+#include <QIcon>
+#include <QQmlApplicationEngine>
+#include <QQmlContext>
+#include <QQuickStyle>
+#include <QUrl>
+
+#include "../config-merkuro.h"
+#include <KAboutData>
+#include <KCrash>
+#include <KLocalizedString>
+#if KI18N_VERSION >= QT_VERSION_CHECK(6, 8, 0)
+#include <KLocalizedQmlContext>
+#else
+#include <KLocalizedContext>
+#endif
+
+#ifdef Q_OS_WINDOWS
+#include <QFont>
+#include <Windows.h>
+#endif
+
+using namespace Qt::StringLiterals;
+
+int main(int argc, char *argv[])
+{
+    QApplication app(argc, argv);
+
+    // Default to org.kde.desktop style unless the user forces another style
+    if (qEnvironmentVariableIsEmpty("QT_QUICK_CONTROLS_STYLE")) {
+        QQuickStyle::setStyle(u"org.kde.desktop"_s);
+    }
+
+#ifdef Q_OS_WINDOWS
+    if (AttachConsole(ATTACH_PARENT_PROCESS)) {
+        freopen("CONOUT$", "w", stdout);
+        freopen("CONOUT$", "w", stderr);
+    }
+
+    QApplication::setStyle(QStringLiteral("breeze"));
+    auto font = app.font();
+    font.setPointSize(10);
+    app.setFont(font);
+#endif
+
+    KLocalizedString::setApplicationDomain("merkurolauncher");
+    QCoreApplication::setOrganizationName(u"KDE"_s);
+
+    KAboutData aboutData(u"merkurolauncher"_s,
+                         i18nc("@title", "Merkuro Launcher"),
+                         QStringLiteral(MERKURO_VERSION_STRING),
+                         i18n("merkuro Launcher"),
+                         KAboutLicense::GPL,
+                         i18n("(c) 2024"));
+    aboutData.addAuthor(i18nc("@info:credit", "Carl Schwan"), i18nc("@info:credit", "Maintainer"), u"carl@carlschwan.eu"_s, u"https://carlschwan.eu.com"_s);
+    aboutData.setTranslator(i18nc("NAME OF TRANSLATORS", "Your names"), i18nc("EMAIL OF TRANSLATORS", "Your emails"));
+    KCrash::initialize();
+    KAboutData::setApplicationData(aboutData);
+    QGuiApplication::setWindowIcon(QIcon::fromTheme(u"org.kde.merkuro.words"_s));
+
+    QQmlApplicationEngine engine;
+
+#if KI18N_VERSION < QT_VERSION_CHECK(6, 8, 0)
+    engine.rootContext()->setContextObject(new KLocalizedContext(&engine));
+#else
+    engine.rootContext()->setContextObject(new KLocalizedQmlContext(&engine));
+#endif
+    engine.loadFromModule("org.kde.merkuro", u"Main");
+
+    if (engine.rootObjects().isEmpty()) {
+        return -1;
+    }
+
+    return app.exec();
+}
diff --git a/src/launcher/org.kde.merkuro.desktop b/src/launcher/org.kde.merkuro.desktop
new file mode 100644
index 000000000..a6fe18dfa
--- /dev/null
+++ b/src/launcher/org.kde.merkuro.desktop
@@ -0,0 +1,10 @@
+# SPDX-FileCopyrightText: 2024 Carl Schwan <carl@carlschwan.eu>
+# SPDX-License-Identifier: CC0-1.0
+[Desktop Entry]
+Type=Application
+Name=Merkuro
+Exec=merkurolauncher
+GenericName=Personal Information Manager
+Icon=org.kde.merkuro.calendar
+X-KDE-StartupNotify=true
+Categories=Qt;KDE;Office;
-- 
GitLab

